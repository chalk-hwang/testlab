apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: agones
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: apps
  source:
    repoURL: https://github.com/googleforgames/agones.git
    targetRevision: release-1.29.0
    path: install/helm/agones
    helm:
      skipCrds: true
      releaseName: agones
      values: |
        agones:
          featureGates: "PlayerTracking=true"
          metrics:
            prometheusEnabled: true
            prometheusServiceDiscovery: true
            stackdriverEnabled: false
            stackdriverProjectID: ""
            stackdriverLabels: ""
            serviceMonitor:
              enabled: false
              interval: 30s
          rbacEnabled: true
          registerServiceAccounts: true
          registerWebhooks: true
          registerApiService: true
          crds:
            install: false
            cleanupOnDelete: true
          serviceaccount:
            allocator:
              name: agones-allocator
              annotations: {}
            controller:
              name: agones-controller
              annotations: {}
            sdk:
              name: agones-sdk
              annotations: {}
          createPriorityClass: true
          priorityClassName: agones-system
          cloudProduct: "auto"
          controller:
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 800m
                memory: 1Gi
            nodeSelector:
              kubernetes.io/hostname: node-two
            annotations: {}
            tolerations:
            - key: "agones.dev/agones-system"
              operator: "Equal"
              value: "true"
              effect: "NoExecute"
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: agones.dev/agones-system
                        operator: Exists
            generateTLS: true
            tlsCert: ""
            tlsKey: ""
            disableSecret: false
            allocationApiService:
              annotations: {}
              disableCaBundle: false
            validatingWebhook:
              annotations: {}
              disableCaBundle: false
            mutatingWebhook:
              annotations: {}
              disableCaBundle: false
            customCertSecretPath: {}
            safeToEvict: false
            persistentLogs: true
            persistentLogsSizeLimitMB: 10000
            logLevel: info
            numWorkers: 100
            apiServerQPS: 400
            apiServerQPSBurst: 500
            http:
              port: 8080
            healthCheck:
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 3
              timeoutSeconds: 1
            allocationBatchWaitTime: 500ms
          ping:
            install: true
            pdb:
              enabled: false
              minAvailable: 1
            updateStrategy: {}
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 800m
                memory: 1Gi
            nodeSelector:
              kubernetes.io/hostname: node-two
            annotations: {}
            tolerations:
            - key: "agones.dev/agones-system"
              operator: "Equal"
              value: "true"
              effect: "NoExecute"
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: agones.dev/agones-system
                        operator: Exists
            replicas: 1
            http:
              expose: true
              response: ok
              port: 80
              serviceType: ClusterIP
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              annotations: {}
            udp:
              expose: true
              rateLimit: 20
              port: 50000
              serviceType: ClusterIP
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              annotations: {}
            healthCheck:
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 3
              timeoutSeconds: 1
          allocator:
            install: true
            pdb:
              enabled: false
              minAvailable: 1
            updateStrategy: {}
            apiServerQPS: 400
            apiServerQPSBurst: 500
            logLevel: info
            annotations: {}
            resources:
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 150m
                  memory: 256Gi
            healthCheck:
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 3
              timeoutSeconds: 1
            tolerations:
            - key: "agones.dev/agones-system"
              operator: "Equal"
              value: "true"
              effect: "NoExecute"
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: agones.dev/agones-system
                        operator: Exists
            replicas: 3
            service:
              name: agones-allocator
              serviceType: ClusterIP
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              annotations: {}
              http:
                enabled: true
                port: 443
                portName: https
                targetPort: 8443
                nodePort: 0 # nodePort will be used if the serviceType is set to NodePort
              grpc:
                enabled: true
                port: 443
                portName: grpc
                targetPort: 8443
                nodePort: 0 # nodePort will be used if the serviceType is set to NodePort
            serviceMetrics:
              name: agones-allocator-metrics-service
              annotations: {}
              http:
                enabled: true
                port: 8080
                portName: http
            disableSecretCreation: false
            generateTLS: true
            tlsCert: ""
            tlsKey: ""
            generateClientTLS: true
            clientCAs: {}
            disableMTLS: false
            disableTLS: false
            remoteAllocationTimeout: 10s
            totalRemoteAllocationTimeout: 30s
            allocationBatchWaitTime: 500ms
          image:
            registry: us-docker.pkg.dev/agones-images/release
            tag: 1.29.0
            controller:
              name: agones-controller
              pullPolicy: IfNotPresent
            extensions:
              name: agones-extensions
            sdk:
              name: agones-sdk
              cpuRequest: 30m
              cpuLimit: 80m
              memoryRequest: 50mi
              memoryLimit: 130mi
              alwaysPull: false
            ping:
              name: agones-ping
              pullPolicy: IfNotPresent
            allocator:
              name: agones-allocator
              pullPolicy: IfNotPresent
        gameservers:
          namespaces:
          - agones-system
          minPort: 7000
          maxPort: 8000
          podPreserveUnknownFields: false
        helm:
          installTests: false


  destination:
    namespace: agones-system
    name: in-cluster
  syncPolicy:
    automated:
      validate: false
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  ignoreDifferences:
  - group: "agones-sdk-access"
    kind: "ClusterRoleBinding"
  - group: "agones-sdk"
    kind: "ClusterRole"
  - group: "agones-sdk"
    kind: "ServiceAccount"
