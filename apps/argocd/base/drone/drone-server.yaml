apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: drone-server
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster
  source:
    repoURL: 'https://github.com/drone/charts.git'
    targetRevision: master
    path: charts/drone
    helm:
      releaseName: drone-server
      values: |
        hostAliases: []
          # - ip: 10.20.30.40
          #   hostnames:
          #   - gitea-127.0.0.1.sslip.io
        image:
          repository: drone/drone
          tag: 2.12.1
          pullPolicy: IfNotPresent
        imagePullSecrets: []
        # - name: "image-pull-secret"
        nameOverride: ""
        fullnameOverride: ""
        serviceAccount:
          create: true
          annotations: {}
          name: ""
        automountServiceAccountToken: false
        podSecurityContext: {}
        securityContext: {}
        podAnnotations: {}
        #  prometheus.io/scrape: "true"
        #  prometheus.io/port: "80"
        updateStrategy: {}
        service:
          type: ClusterIP
          port: 8080
          annotations: {}
          nodePort:
        ingress:
          enabled: false
          annotations: {}
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          hosts:
            - host: chart-example.local
              paths:
                - path: /
                  pathType: Prefix
          tls: []
        resources:
          limits:
            cpu: 600m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 256Mi
        nodeSelector: {}
        tolerations: []
        affinity: {}
        extraVolumes: []
        extraVolumeMounts: []

        persistentVolume:
          enabled: true
          accessModes:
            - ReadWriteOnce
          annotations: {}
          existingClaim: ""
          mountPath: /data
          size: 8Gi
          storageClass: "local-path"
          volumeMode: ""
          subPath: ""
        emptyDir:
          sizeLimit: ""
        extraSecretNamesForEnvFrom:
          - drone-server-vars
        env:
          DRONE_SERVER_HOST: "drone"
          DRONE_SERVER_PROTO: http
          DRONE_DATABASE_DRIVER: postgres
          DRONE_GIT_ALWAYS_AUTH: false
          DRONE_RPC_SKIP_VERIFY: true
          DRONE_LOGS_TEXT: true
          DRONE_LOGS_PRETTY: true
          DRONE_SERVER_PORT: ":80"

  destination:
    namespace: drone
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=background
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
